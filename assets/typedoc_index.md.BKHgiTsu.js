import{_ as i,c as e,o as a,V as t}from"./chunks/framework.BqX6ZQZG.js";const p=JSON.parse('{"title":"@minifsm/core","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/index.md","filePath":"typedoc/index.md"}'),n={name:"typedoc/index.md"},l=t('<h1 id="minifsm-core" tabindex="-1">@minifsm/core <a class="header-anchor" href="#minifsm-core" aria-label="Permalink to &quot;@minifsm/core&quot;">​</a></h1><p>Defines types, functions, and utilities for working with Finite State Machines (FSMs).</p><p>This module provides essential components for constructing, managing, and interacting with FSMs, including types for representing states, transitions, and actions, as well as functions for performing transitions, serializing/deserializing FSMs, and creating transitions/actions.</p><h2 id="mainfunction" tabindex="-1">MainFunction <a class="header-anchor" href="#mainfunction" aria-label="Permalink to &quot;MainFunction&quot;">​</a></h2><ul><li><a href="./functions/doTransition.html">doTransition</a></li></ul><h2 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type&quot;">​</a></h2><ul><li><a href="./interfaces/FSMMachine.html">FSMMachine</a></li><li><a href="./interfaces/FSMSerializedMachine.html">FSMSerializedMachine</a></li><li><a href="./interfaces/FSMStateDefinition.html">FSMStateDefinition</a></li><li><a href="./interfaces/FSMTransition.html">FSMTransition</a></li><li><a href="./type-aliases/FSMAction.html">FSMAction</a></li><li><a href="./type-aliases/FSMCondition.html">FSMCondition</a></li><li><a href="./type-aliases/FSMConditionalTransition.html">FSMConditionalTransition</a></li><li><a href="./type-aliases/FSMDefinition.html">FSMDefinition</a></li></ul><h2 id="utils" tabindex="-1">Utils <a class="header-anchor" href="#utils" aria-label="Permalink to &quot;Utils&quot;">​</a></h2><ul><li><a href="./functions/createMachine.html">createMachine</a></li><li><a href="./functions/createNullAction.html">createNullAction</a></li><li><a href="./functions/createNullStateDefinition.html">createNullStateDefinition</a></li><li><a href="./functions/createNullTransition.html">createNullTransition</a></li><li><a href="./functions/deserializeMachine.html">deserializeMachine</a></li><li><a href="./functions/serializeMachine.html">serializeMachine</a></li></ul>',9),o=[l];function r(s,c,h,f,d,m){return a(),e("div",null,o)}const M=i(n,[["render",r]]);export{p as __pageData,M as default};
